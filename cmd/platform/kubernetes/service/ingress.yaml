apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMFN4M1dqLytMMkRXeEhPR0Fld1dpNVR5cWRJbG1lakVDQWlFMDlMWTkyUkZncVV2CkdLNUxCRkx1RjVBc05TUmFHY1dwZnVNWUFoemtHakFBdTdXVStWYzVQU3lxOEprQWg1alRxd2o3NFh6Wm83QXEKem1rRjg3VWZ3YWk5OER0Z0pZSUVZZy9GRWpjV0MxQ2I4OXl1MzNpUEQzSXo0Tm5QT0ZnY1RWQ2pIdXNCc3VZQgpJRFA5THp4TDhPQnBCRXM5U2lwYTdYNWx1NTZUN0M3ZE56WGRUTVV0ZnIyMjFtL3puSU1WV0VaWEtHOXNjZDN5Cjc1WjRtbWppL2JEcGxXK3VWUk55NjBJYVVPZkY2NHRhbWZOOC85VUY0amVQb2xIMjd2cHZsQjhOb1RmUHFLVGsKWHBuRFRjRGhyeGsyeUJCbjA1V2dYTVVxVGJuRjIrNTlISTZodjlkWmdPZ0lNM2JST21uZGZhSE8yN0IxbVFzLwpyWExXNlpxWWlyYnhsNmdaUnZMdmZuWngralhuUTFyNk9CTGNUcW5yd2JEb0xtR2hHQkhiODhabkV4UHR0cU5DCi9PenJzYXZhTDA4a2JoME5JVm44RVZ5akJLQnUvTDVnNG1WaEtXOUJSbXV5NnJFNWFZWGVidTB5MEhrM2k1U2EKbzJzMWUrYnNlRkE4ZEdjY3BDd1BYMHhDSmFBdDl1eTFOaTFGSElsU2JTT3FyaEdJa2htR0ljMmdYWDFRNXpBOQpLOGFCK2xtbkk1WjNJZmkxdDloaW40SW5ydmthKzJyWm12TjVIZTU5Tnl6ckVuR0FWenBoNXBkZEdxbGdwNlBNClpxN0M3a01sZHZTdFlmeFdMRzRJeEl3MGRkZTJEZHk5M1BoeCtxdDJZTWplSFp2S2VwdDAyNWpxbHFzQ0F3RUEKQVFLQ0FnQnJVR3ZmVW90L0ZTaTZXeVo2WC94bEdrS3hHNDZNK3QxdjNhYi80ZUhNY3BZeTQ3cFk2RHEyZWpHSwp4ejNXK2RKNy9HdnNIR2haMVNhMXhNRHJqTXBrYmZxQXh5VGdFUzh6WWhYZVh0cVRJZkdxeUJ2K0QrV3MxZFQ0CkR6RjdTWXNYVXpBYWUwcTVBS2Yvb0JpU3NUcktqZGlmclJDdW9EQnZFTTFjWVMxL0ZFU24ydGJqQmFrMGpiUE0KWGVXaS9WTHhkTzkzZnV5RXFHUHR2VkZqSFBCdmpZMjh3MnBGYytSQS9RTjdhWU1YektxUGRMWkpjeUptM2I3dgpOczl3Q244ZlNMNGhzcVU3c3QxWTdnTEtqeUFuUk13aTlpeHJzNitEaGRxdTNJdXFsYTZsTUF1MStSODVDZWIvClpXazBsUzRmWUZtSW51TUlRM0llVnFtN2QvWEZRQzBIeFdBYW1IWTJMRDRWN0h2aFhWZ1dnWjZ3Q09xalMvWEwKNDU1U0ptYVYvWXZzYkd1elhGWkl5TGcySElPK0xzZjJUZ0UwUEtCMXAvQ01hajNnTTFUSzlnMCtaRVd1SGR3VQptcEY4dm84WlZCWUZtOTNFL1BOS1pWY2VMSW9PUlpEVUJrMnp5bks4SkRvdG1HeHJ5Qy9hWWVmL1YxREIyNmRiCm5zUDRLVjhDM1Q0UkhESnRHWEpBb1IwUmRzQkpjQ1FJYUZ2TDMrMlRZWUxhdEZHUTdSKzROVk5icG1XNGp4VUcKVVFTZ0xQNytiTWF4YWVIdHkxb1dyVFhkTUNRSUFaUlQxNUx1SWs5ajd0YTNRVTdNVzQrSk5IZUZabUNkVkNJTwpuTlRaZy9NckU1Qk9GL1JydHBRSjhIR0NNaG5WNTJVaXdoSXp3ckhGZ243UDVkUVpRUUtDQVFFQTZOMmJoblZtCkI1MmdFUWl5Y0hmVG1LMFZQMEJuZm1CT0wrRjI5cE1yaXB6MVZidkl3azlzRkQ5ZVZub0JIdjdCQWdyQjZXVE0KUlpxUEFuQmlaU08zUWIvdmlrV2Z5WEJqcDNCSzNHbG9JWWgxRDNiWVA0T3VhK1VPNHZZaDhFSnArYXhJclFKcgpHU2hGbFoxUHpVODZLazV3UG9pcktmaWpwNkVqVmU4bUZzbWRVT0VSalI3WElEemFHV1EvQTZLSjR2R0JTOFJZCjVKWGtPcElTNEw5UXpueHRHUlFtZks0eWpZZDlZMzBabnN0b1JxVkQvU1ROUU1hRXNvS2gyQ0IzalFlcit4MDYKcEdkMGpaMDZuTFBVSGc2dktQZkR6NUhiNXBsMUE2VGJIRHNGb2NYTWF2bkpudGhTQnpQQi9aMjlXY2pwaE1uawoySUtxRnFEQlVtRU5Dd0tDQVFFQTVmUlBLaWt3OFdKb2IxSU9KdTd2dUNSMTdUcm1XODd5NVRETEIwNHJKZi81CmFoVldvbnBBeGt6VkN6R0U4MmpqaXlEQnVoSW44dHdkMXRNeWRiZ2k1ZjExUmQwMURENWlMTEI0RnpvT3pudk4Kd3BhQ1FyOUNSRWcySTFkTFpic1ZqemVPckZtTU5ZQjVGNGdmT0E0aHRvUEs4WXlvUHd0TTE2Y3cxMjhKSjVxdAp4Ym5CaXgrc0xtN2N0T0RpcXVXa1JjOEpOdTBzLzl6dWhQTEs4cHBHN2w3QndsaHNzWm5jd243TDJXWjlnQ2FTCk5SUVI3VzZ5TXpBTDZ5U0xLYm9tem1VM2FhTllRbzFHdS9IL0NjNER6bVFyWXNuSHA3Ry9idndUMjVUa2xKWTYKb0ZtR0tBUk9DKzVobVZGNEJDZmdvbEt6UHdRZXA5L1F5bm81MW01ZzRRS0NBUUVBMzBQU0lMbWdxSDZkZ0pkNQpGbElkQXc0NEI5d0ZIbXJSckNDZEFjNmErWnlCc01DSnZKdVBnVjQ4WWVjNStmREJOdWIvZ25uTlRKTGl1TER0CjloQ25YSmZjNEJMZkg3RHRLeFdFQVEzaTgvdTBXSzVXcVpia2ZiZ3hiTFFXV0JnbEtXZmdpbGgrUExHYS9kYkYKTTVEWnNNUmg0K0wvVVE5K1FYTkN3TnE1QnpJbzdlbk0vU1BybUpJZmZpYmFMKzhBQ3lJSUdJL1p0dGhyNlNneQpoMStHNTJMdTZ4T2h6dnJwcHo2WG52TEx4Szg3ZkRocUZtVFprbGlEMCs5aG95bUYxaWJiNHJqa2g4cFZPbzNjCkszQlRXTG8xZ0s4RkE1ZlNZYWNTUlBzanhVNWxtUFJmaU5XVFZRUU1xYkViTnNHdFVVOUxiYkJ4QkpGSzZNVWEKZFpSdGZ3S0NBUUVBeVNXMjVldFlLNTNvT3BBdFh2TWM4QmU4ckFJY3BPeFczaEtiVmsyVFFzOHhiaEV5VWpmYwpWMW0zOWUyZ0hZZC9teURSTlNGU25vYmE5eUtRL2haUE9KMUlLdysvcW5FYlVYb2Y0amxmNEZDOWdOeEZIM3ZMCnpJemFCbm9Dc3Y4K2NhT29ncXhtRUJyTVVjQTVoc0FkejFoamVuMk9ZbTlSRFViclcxZCtTNDFyT2cwdDlyT0MKMnE4UkVvdXcyc3E3c25EUzM2QUIvK0pUSmlwM1NsV1hmRVdZK1paOXBiRXdRVlhHbk9taEdDc2xNNWJWdzdwVAoyS0RMbkNuQUxZVHZFeFhJcmZnN2FTUEpYdmZsSHI5OTV0a0tkb1NJeC9DY3dzbHYyV0RadmZ2WFZwSlkzc0k5ClB3U0xqU0NOZWgwanl2bktYM0lNR3M2V0JiZDZ4azZSSVFLQ0FRQWFZTnJ1eFU5RkdPaXRDelBOdUZ6cC9iZW8KcElyUVN2MWFGRitCcStHL1FoVHRHUGxpTHBMNTJZWW9JR0hYZ2NTLy9sbjlkTHNRdXFtZ2JnbFNlK2dhaUpBSwpMMUcwODUxNDIxTlJPVmtDVE5xN2Y3UStsRUJ1OW40R2dKUU9XcjlJQjE0VFFxd1hYOVZXOW1ETENmcFFOVW5wCkhBUFNXVG5CZFVDZCs0VGdxRGJZeElKS1huQytOcnJENHhPODU1WWI3VGNjc2tvRnhHOE4vdUViZE5iV3lEVU8KR3ozVWhxemg2NjJnc0VMSmRUUWJrZnBqZlU1Yi9adHRBOHp3T0dMdUIyeDA5Nk5mUTA0YjgxcTJyS3pmenlUcApQTHA0Ty8yMjl0M1ZFcGFKQVJxQUJ2UENONEJYcm9tNitvcTN2UW1iNTlIbkoyeXJvRElMdFlYSHZNMVYKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: mcbeam-certs
  namespace: default
type: kubernetes.io/tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: grpc-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"
spec:
  tls:
    - hosts:
        - "*.mcbeam.cc"
      secretName: mcbeam-certs
  rules:
    - host: "proxy.mcbeam.cc"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: micro-proxy
              servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ###开启跳转
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    ###增加跨域以及转发头
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "User-Token,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,User-Authorization"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    ###限流
    nginx.ingress.kubernetes.io/limit-connections: "210"
    nginx.ingress.kubernetes.io/limit-rps: "210"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "5"

    # more_set_headers "mcb-authorization: $authorization";
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $tmp $http_authorization;
      proxy_set_header Mcb-Authorization $tmp;
      more_clear_input_headers authorization;
    #    proxy_set_header authorization: '';
    #  proxy_set_header geoip_city $geoip_city;
    #  proxy_set_header geoip_city_country_code $geoip_city_country_code;
    #  proxy_set_header geoip_region $geoip_region;
spec:
  tls:
    - hosts:
        - "*.mcbeam.cc"
      secretName: mcbeam-certs
  rules:
    - host: "api.mcbeam.cc"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: micro-api
              servicePort: 443
    - host: "*.mcbeam.cc"
      http:
        paths:
          - path: /api(/|$)(.*)
            pathType: Prefix
            backend:
              serviceName: micro-http
              servicePort: 443
          - path: (/|$)(.*)
            pathType: Prefix
            backend:
              serviceName: micro-api
              servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: http-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - "*.mcbeam.cc"
      secretName: mcbeam-certs
  rules:
    - host: "*.mcbeam.cc"
      http:
        paths:
          - path: /web
            pathType: Prefix
            backend:
              serviceName: micro-http
              servicePort: 443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: websocket-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    #配置websocket 需要的配置
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  tls:
    - hosts:
        - "*.mcbeam.cc"
      secretName: mcbeam-certs
  rules:
    - host: "*.mcbeam.cc"
      http:
        paths:
          - path: /websocket
            pathType: Prefix
            backend:
              serviceName: micro-gate
              servicePort: 3250