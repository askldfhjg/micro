apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeUhRSE5FMW9ESUl5b3pvdGplaHI4SGxjZk9URUpwVzlmTjV6eXM1dGJ5dWJqQVNKCmVyMjdLajVudEpRc2NsQlBsWG9FeDZ6U0lKOWZIdElyYVVYamM0a05EUmVJN0N4TTczME1Mai8zb3ZhLzBuWXMKNUJPcFlSbjY1dnhob2Flcm9pMDBockNBWHhYWFJxN1VIdGovL2FseGlQRlpsejlXNHQ4QUVzSDBUdnJpTlJGVwo3R08xWmtCQ0taVnVFNXFqc0NwSXdveURvd2hSSnBOUUJKMUdNR2t1WmNqTDJmTHRMYkF2bTdvUEdTRVAreDBnCkxud1lqY1dVOFU1ajdOQWxtRndNa3hqSXo1U1J2Q0dqa2VxMVo5RUJjUE5wQkIxaHFtakk4RDJtRktNRVlzQUEKOFF2T1VjeGhiQVRDSjRudU9wT04vOGt3RE1ZdTlzc3pSeTgwbnYvelIrY09Gemo2QTAwTmNCam9lQXh0bXBKNwpKTkFZaU1kR2tub3ZvYk83Tm9mamhYK0Zqb2dyM1FKbkVkTDJZTFlnTk5rRE5tdHhSd08vbWhHYktqOEd6TGFyCm9sT0xIV0V3TU81UGN2MXlqUlhuWUQ2NDdqUjFMQ3AwYlhDYS9LTjV3MkNGNzc2ZTFUUFB6MzNKakpCbmdvWGYKTWZPN1Y4U2F4THprejlQNlp5dTZkS05ncDhRZnJsOXRUcVlWRjNtaUJuR0F6aXZ4NFpwU1BVdDg2TlZzWHk3QwovUXlxd1diUFRLc0JpblIvRVQwd25CdGdlMlNtcm5oaFp1S1F3OVpyMG0weWwyTU9neTBsTDkwWmI2Q3dVc09OCjFwMTh2bmp1c0EyZVBLU1JxRWdFVjdzL29rLy9IekN3MGs1TFAxWWlwMTZWbkV2eERhRjB6MC90a3dFQ0F3RUEKQVFLQ0FnQllnZXJBYkVFNTdLOEJKV29CMDVMOVhnaTVXS1ZIU0N5Zm12VlRvZXZ0L3pveUM3ck1TRVFBOWdjQwpVNzZBUnZlc3ozQ1czYmIyRW9pRWFsWWlxR295bEZ2LzRObGpObmhOOGsvVGlBa0dtcDYrQmRIeWJzQUdFTnVZCjYrMEwzS1hLK056TmI5ZHVwSTBtTjRHUGtVOE9xS2RweU84KytnZWFLczYwZVpFdTRsWEpDcnZ2cW1McElBeFcKb2hVMWNMMC94cHZUMHdrNGppNk9zdExOQnNoOERhVWY2aFlnU01QeXZXMTMvQ0k0ZlVHNkpmVVVzVlNDSExDVQpENEhOaVdaZ0xKeWN3bi9BTUNCZENobFlEMk5EMEtRclJENmxRM2ZoTDEweHZuYTdlL011eXdwZlpGQVlDLzhrCkc4SENoWU43dDdVbU1LWVhyZFlFd0ZvRzMxQUM4RUVmSVJZbWlnV05ROGZ5cy81N1BWWnZQVHF6K0ROb3V2MjkKdjRva21EMHk0WnI5SVJaZEt1L3cvOUhiOXBTTS9jNnAyS2hLQnd4cDBEMlA1TE8zemw2SmFGc3ROVWJaa1puWAozbmJ2cVNtci8wS3AwaFBJb0FEakFSVU1GK3lLbEUxMUJpUlg2YkZUZXBhZGVhUmViaS9aRGR0ai9IbEpDekllCnRsUHVFWnYxclBqUkM0V0JWTjlJZXo0SFgweG1wMGJRaEFrdzdRR0NwenJ5RkEweXh5M3lMUFpwK01RblhHbHgKS01LVWk5WjVvVXhsSXRPR1hxbkVLT3RXRmdOZXR2cHhsK1p2Z0lIY1c4TUxNT0FVSHFOSjUzU3dORC9KVWpqSApsWDVQSWVUaEZRY1FWU2V1dFk5bGhGUHRhWjI3cUdvK2lGSjErZnBKdG1DemNIc053UUtDQVFFQTdraDFyWFJQCll1cjgrSGp5WnhmKy9zQThMN2V2YWVmcm1lZ2J1TlpzNHJzWEpzOFdUYjNnK0czbU1ibVhFMkJyKzRWM1JZVlgKVHN4cCt6VERMNldLNTFLZTVQalZxWTgydGdiRVJRcDRaUU04NTlEZ2xWd0FoVzllUGZSOTRQazlNU3QwNTgvcwppSjVQeFFRS0R2Slo2YUoxcTZPL0pGQXFWbGhEUnZCemhvNGEyOG1aUUtDeVZQb1h1c2FsV2YxRkhodUhSSHZwCnpqNzJQYzU0ak5MMTZJeXBWRElFTGxORkxzWE13UzRzTkhDQmQ5eW5RNXJuRHBrd0p3K1l6WXVLTnpaZUxRU3AKaUozR1JoTWthdzdyeFZwb2VPcHJaRnV3anQvd2Nic2dNMkIxUmIwM2JCZ3gzQWRweTQ1NGFycUpXUFdWUGNYbQo3MzhNTm1XUVJJbzFXUUtDQVFFQTExdUJsYVB3cDErUVFndEtXMm94WU5LSGJkbGNqS0ovMzRFTVlQanFuNndxClV3OE1pd1d1MTNRS2NJRmFnYmx2ZWFVNklLSG1CS3lSK0tad3N5Qy9BU2xOeGxWKy9tOWhPQ3JhZmRlYXoyb3UKUG9sL1lYbzBoWjEzRVBCMDdVbU85V09BSmw3YWRCR3cvSU1hWG01aFdVdTVGYTNHOGMzRlFWeGRvSktnV3l1MApmaXQrVXIyNHh2SW9xZlJnQkNsa1V1VkdRYi93dmE3UlJrSjhOL3lMVVNlai9pMm1UdnlyOFVGc2tvM2g5UytwCmhwOGZ0bWVXMk5NeHplNW0rblZSQndpVCt5eVFLb2I5SWo1Qzd2QVpPbzhhNFdaK2NHQ2o0RnhScUk2RmNXNVMKY1VKOHYxM213bGx3Uk1BK0N4Q2lIaVBlMzZWV3BMSGgyTTh5YjZtTjZRS0NBUUVBc0xsdy9hcEx6cE4xOTFyTQpmWVdnaTVSTGp5QnVxdDlsTDRxa05OeGplVzFFNkhXaWx4b0NwbjNyd21saEVPL3NabWxBWW9GWWxZcXA5N1BVCko1eGhmdHNhR2J3cnkwdjZTZHFPNnAydldVdWplbExDbmtQVDV5TUlCRzgyaFFxVlJjaHpOaEpSM2FsOGhDUlEKeVhFWkdseHhaVkZXekRuZ2pKVjlvRGxwbFJ3RDg0cDdiU0ZCNGlCeVJRWmJVSGkxTUhVK1I1NlhjMjNpOTBnUQp4SEVhRE5WMktJbkg3QXU2UGN4WjVkUzIyRld3MEJNSXd1MDUvT3ZFZU5QcWdsZkJ0TjFQejVlcm5UVlcvbFhvCkpyYTBTblNaRTBUWlRWOXJmU3U5aXJ3OFQ1NTBtN3FRUmsxVGZWcktManlHTnJJT2Q3bjhiQXBCRXROcFhWYksKUHVzNlVRS0NBUUIrenZVSTVoWEltRzdiVk1hZCtYUEY3WEd0YnpZZDRYbW1ZOWlrS1M0T2cxUVF3R1hFWHI1TApRNXI2RUZENDNmWVVEUVNqUG5HeEF1U1pJM2h0SWJVV3UvbDk5YzNuaURJWTNyTDFNc1dIcUtBK1ZyeFk2NXFOCnF1RDNhbitQVWFjS08ySzBOVm93eWxJSy9pL0N0d0Eva21VVHJOWGVnQ25NaU5UZ3ZqWUtPVHY0cHllbEZPMysKeDR6R05vMXJKZXhiRzRJNUtRcGF4dHVYb1lKL2ZRZVQ2K0dXdzg2UDZCeGUzUVZQYnBoRXhhSHZFVGVkTW5ZUwppcGxqQnlSQUNtQ0I0YjB4UTFaSWxGL3RqL2ZkdGlkRTRnc1Qra1F0YTlwVFBFa2hGWHJpQmZJcG10clYzRGNLCjdaczhBRzhJR08wOURpWW9UclVzR1VwQlhnLzJ6RUl4QW9JQkFRQ0ZDLzZZa0hodExlazlmUGVoK0l3QlV1UEQKa2NNcHV0NlNPQ3hHcnp5YU5sclo0aEZHL0ZIcWxyeUJYRkM1alYzdnRxRTZuNXhqMFFQZU9TNjlCQXhjK3R2dgpzWlFNMDNKYi80Ykl4bDVRejk5ZXR1VGMzVWtQcXVQM1hTMm12VGRqQWgxQ0h6aDI1UEh5NnEvUVpWc2t2cDlhCmFFRHg4R2NzcEdlM2QrM25PekExcUFiVUVDcDBJQjZRa3kvRTIzdTZlVDRKUHgzMzEyQW45NWl2U1B1bkhOb0QKdWJHZVZUWFQvZ2MwNUErOUU2QWcrOTBQVDcvVE0vYjIzZVZhRGlDV1B2eVNyeE16cm5raEpmZ2liMW5SRzRaQwo5MGlubTVINzZIZCtFWHZkOGtzVmk5anB0R1NiNVpvQWt4NGJCU0RTTFA3M2dzK1Y5SU5qUngvcHdBWlIKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: mcbeam-certs
  namespace: default
type: kubernetes.io/tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: grpc-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"
spec:
  tls:
    - hosts:
        - "*.mcbeam.net"
      secretName: mcbeam-certs
  rules:
    - host: "proxy.mcbeam.net"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: micro-proxy
              servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - "*.mcbeam.net"
      secretName: mcbeam-certs
  rules:
    - host: "api.mcbeam.net"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: micro-api
              servicePort: 443
    - host: "*.mcbeam.net"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: micro-api
              servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: http-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - "*.mcbeam.net"
      secretName: mcbeam-certs
  rules:
    - host: "*.mcbeam.net"
      http:
        paths:
          - path: /web
            pathType: Prefix
            backend:
              serviceName: micro-http
              servicePort: 443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: websocket-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    #配置websocket 需要的配置
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
spec:
  tls:
    - hosts:
        - "*.mcbeam.net"
      secretName: mcbeam-certs
  rules:
    - host: "*.mcbeam.net"
      http:
        paths:
          - path: /websocket
            pathType: Prefix
            backend:
              serviceName: micro-gate
              servicePort: 3250